Attribute VB_Name = "SIFOC_OfertasXML"

Option Explicit
Option Compare Database

'--------------------------------------------------------------------------
'   Documentación SNE Espacio Telemático Común
'   http://www.sistemanacionalempleo.es/et_comun.html
'--------------------------------------------------------------------------
Global Const U_CodigoAgencia As String = "0400000003"

Public U_SQLCol As String       'Consulta de personas colocadas de agencia(estado contratado)
Public U_SQLCol1 As String      'Consulta de personas colocadas de agencia(estado contratado)
Public U_SQLReg As String       'Consulta de personas en agencia que se enviaron
Public U_SQLRegNew As String    'Consulta de personas en agencia nuevas

Public Function pruebasXML()
    Application.ImportXML DataSource:="C:\ejemplo.xml", ImportOptions:=acStructureAndData
End Function

'*************************************************************************
'   Generación de archivo XML de Agencia de Colocación
'*************************************************************************

'---------------------------------------------------------------------------
'   Autor:  Jose Manuel Sanchez
'   Update: Jose Manuel Sanchez
'   Fecha:  02/01/2011 - Actualización:  02/01/2011
'   Name:   createArchivoAgenciaXML
'   Desc:   Crea archivo de envio ofertas al SNE en formato XML.
'   Param:  fechaI, date
'           fechaF, date
'   Retur:  devuelve dniNie correcto NNNNNNNL
'---------------------------------------------------------------------------
Public Function createArchivoAgenciaXML(fechaI As Date, _
                                        FECHAF As Date, _
                                        Optional tipo As Integer = 1) As Integer
    Dim strXML As String
    
    Dim fs As Object
    Dim a As Object
    Dim Ruta As String
    Dim res As Integer
    
On Error GoTo TratarError
    
    res = 0

Debug.Print "* INIT createArchivoAgenciaXML"

    'Creamos fichero XML en la carpeta donde se encuentra SIFOC
    Ruta = CurrentProject.path
    ChDir (Ruta)
    If (tipo = 1) Then
        Ruta = Ruta & "\ArchivoOfertasIndividual.xml"
    ElseIf (tipo = 2) Then
        Ruta = Ruta & "\ArchivoOfertasAgrupadoMensual.xml"
    ElseIf (tipo = 3) Then
        Ruta = Ruta & "\ArchivoOfertasAgrupadoAnual.xml"
    End If
    
    Set fs = CreateObject("Scripting.FileSystemObject")

    Set a = fs.CreateTextFile(Ruta, True, True)
    
    strXML = "<?xml version=""1.0"" encoding=""ISO-8859-1""?>" & vbNewLine & _
             "<!--Sample XML file generated by IFOC - José Manuel Sánchez-->" & vbNewLine & _
             "<ENVIO_ENPI xsi:noNamespaceSchemaLocation=""XML_ENPI_v1.0.xsd"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">" & vbNewLine
    a.write (strXML)
    
    generaEnvioMensualXML a, fechaI, FECHAF, tipo
    
    strXML = "</ENVIO_ENPI>" & vbNewLine
    a.write (strXML)
    
    'Cerramos fichero
    a.Close
    Set a = Nothing
    
    createArchivoAgenciaXML = res
    
Debug.Print "* END createArchivoAgenciaXML"
    
    Exit Function
    
TratarError:
    res = -1
    Debug.Print Err.description, vbOKOnly, "Alert: SIFOC_OfertasXML(createArchivoAgenciaXML)"
    createArchivoAgenciaXML = res
End Function

Private Function generaEnvioMensualXML(txtfile As Object, _
                                       fechaI As Date, _
                                       FECHAF As Date, _
                                       Optional tipo As Integer = 1) As String
    Dim fInicio As Date
    Dim fFin As Date
    Dim fInicioBucle As Date
    Dim fFinBucle As Date
    Dim strFecha As String
    
    Dim str As String

Debug.Print "* INIT generaEnvioMensualXML"

    'Buscamos meses con envíos
    fInicio = Format(fechaI, "dd/mm/yyyy 00:00:00")
    fFin = Format(FECHAF, "dd/mm/yyyy 23:59:59")
    str = ""
    If (tipo = 1) Then 'individual
        'Bucle de envíos mes
        While DateDiff("d", fInicio, fFin) > 0
            strFecha = Format(fInicio, "yyyymm")
            fInicioBucle = fInicio 'Right(strFecha, 2) & "/01/" & Left(strFecha, 4) 'mm/dd/yyyy
            fFinBucle = DateAdd("m", 1, fInicioBucle) 'mm/dd/yyyy
            fFinBucle = Format(DateAdd("d", -1, fFinBucle), "mm/dd/yyyy 23:59:59")
    'error mirar aqui
            generaEnvioMesXML txtfile, fInicioBucle, fFinBucle, tipo
            'Incrementamos fecha
            fInicio = DateAdd("m", 1, fInicio)
        Wend
    ElseIf (tipo = 2 Or tipo = 3) Then 'agregada
        generaEnvioMesXML txtfile, fInicio, fFin, tipo
    End If
    
Debug.Print "* END generaEnvioMensualXML"
    
    'generaEnvioMensualXML = str
    'Debug.Print " > " & DateDiff("d", fInicio, fFin)
End Function

Private Function updQueryCol(fi As String, ff As String)
    'Personas atendidas - COLOCACIÓN - Estado seguimiento ofertas (11-contratado)
    U_SQLCol = " SELECT r_ofertacandidatoshistorico.fkPersona, r_ofertacandidatoshistorico.fkOferta" & _
               " FROM r_ofertacandidatoshistorico" & _
               " WHERE (r_ofertacandidatoshistorico.fechaHora Between #" & fi & "# And #" & ff & "#)" & _
                    " AND (r_ofertacandidatoshistorico.fkOfertaSegEstado = 11)" & _
               " GROUP BY r_ofertacandidatoshistorico.fkPersona, r_ofertacandidatoshistorico.fkOferta"
    
    'Personas atendidas - COLOCACIÓN - Estado seguimiento ofertas (11-contratado), no pueden estar en Registro
    U_SQLCol1 = " SELECT r_ofertacandidatoshistorico.fkPersona" & _
                " FROM r_ofertacandidatoshistorico" & _
                " WHERE (r_ofertacandidatoshistorico.fechaHora Between #" & fi & "# And #" & ff & "#)" & _
                     " AND (r_ofertacandidatoshistorico.fkOfertaSegEstado = 11)" & _
                " GROUP BY r_ofertacandidatoshistorico.fkPersona, r_ofertacandidatoshistorico.fkOferta"
End Function

Private Function updQueryReg(fi As String, ff As String)
        
    'Personas atendidas - REGISTRO - NUEVAS EN AGENCIA
    U_SQLRegNew = " SELECT r_serviciousuario.fkPersona" & _
                  " FROM r_serviciousuario" & _
                    " LEFT JOIN (" & U_SQLCol1 & ") as Colocados ON r_serviciousuario.fkPersona = Colocados.fkPersona" & _
                  " WHERE (r_serviciousuario.fkServicio = 8)" & _
                     " AND (r_serviciousuario.fechaInicio Between #" & fi & "# And #" & ff & "#)" & _
                     " AND (Colocados.fkPersona IS NULL)" & _
                  " GROUP BY r_serviciousuario.fkPersona" & _
                  " HAVING (Count(r_serviciousuario.id)=1)"
    
    'Personas atendidas - REGISTRO - INTENTO DE ENVÍO A OFERTAS
    U_SQLReg = " SELECT r_ofertacandidatoshistorico.fkPersona" & _
               " FROM (r_ofertacandidatoshistorico " & _
                 " LEFT JOIN (" & U_SQLCol1 & ") as Colocados ON r_ofertacandidatoshistorico.fkPersona = Colocados.fkPersona)" & _
                 " LEFT JOIN (" & U_SQLRegNew & ") as NewReg ON r_ofertacandidatoshistorico.fkPersona = NewReg.fkPersona" & _
               " WHERE (Colocados.fkPersona IS NULL)" & _
                    " AND (NewReg.fkPersona IS NULL)" & _
               " GROUP BY r_ofertacandidatoshistorico.fkPersona" & _
               " HAVING ((Min(r_ofertacandidatoshistorico.fechaHora)) Between #" & fi & "# And #" & ff & "#)"
               
End Function

'------------------------------------------------------------------------
'   Tipo: 1-Individual, 2-Agrupado
'------------------------------------------------------------------------
Private Function generaEnvioMesXML(txtfile As Object, _
                                   fInicio As Date, _
                                   fFin As Date, _
                                   Optional tipo As Integer = 1)
    Dim strXML As String
    Dim strSql As String
    Dim rsR As ADODB.Recordset
    Dim rsC As ADODB.Recordset
    Dim anyoMes As String
    
    Dim fi As String
    Dim ff As String
    
On Error GoTo TratarError
    
Debug.Print "* INIT generaEnvioMesXML"
    
    If (tipo = 1) Then     'Individual
        anyoMes = Format(fFin, "yyyymm")
    ElseIf (tipo = 2) Then 'Agregado Mensual
        anyoMes = Format(fFin, "yyyymm")
    ElseIf (tipo = 3) Then 'Agregado Anual
        anyoMes = Format(fInicio, "yyyy99")
    End If
    
    fi = Format(fInicio, "mm/dd/yyyy")
    ff = Format(fFin, "mm/dd/yyyy")
    
    'Actualizamos consultas con la nueva fecha
    updQueryCol fi, ff
    updQueryReg fi, ff

'Debug.Print "*" & U_SQLCol
'Debug.Print "**" & U_SQLRegNew
'Debug.Print str2
    
    strSql = U_SQLRegNew & " UNION " & U_SQLReg & " ORDER BY fkPersona" '& " GROUP BY fkPersona"
'Debug.Print "***" & strSQL

    'rsR - recoge personas nuevas de Agencia y os intento de envío a ofertas
    Set rsR = New ADODB.Recordset
    rsR.Open strSql, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    'rsC - recoge las personas
    Set rsC = New ADODB.Recordset
    rsC.Open U_SQLCol, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    '-----Envio mensual---------inicio
    strXML = "  <ENVIO_MENSUAL>" & vbNewLine & _
             "    <CODIGO_AGENCIA>" & U_CodigoAgencia & "</CODIGO_AGENCIA>" & vbNewLine & _
             "    <AÑO_MES_ENVIO>" & anyoMes & "</AÑO_MES_ENVIO>" & vbNewLine
    txtfile.write (strXML)
    
    '-----Datos individuales-----
    strXML = "    <ACCIONES_REALIZADAS>" & vbNewLine
    If (tipo = 1) Then ' Tipo = 1-Individual
        txtfile.write (strXML)
        
        generaAccionesMesXML txtfile, rsR, rsC
    Else
        txtfile.write (strXML)
    End If
    strXML = "    </ACCIONES_REALIZADAS>" & vbNewLine
    txtfile.write (strXML)
        
    '-----Datos agregados-----
Debug.Print "---------------------" & fInicio & " - " & fFin
    generaAgregadoMesXML txtfile, fInicio, fFin, rsR, rsC
    
    '-----Envio mensual---------fin
    strXML = "  </ENVIO_MENSUAL>" & vbNewLine
    txtfile.write (strXML)
    
    'Close recordsets
    rsR.Close
    Set rsR = Nothing
    
    rsC.Close
    Set rsC = Nothing
    
Debug.Print "* END generaEnvioMesXML"
    
    'generaEnvioMesXML = strXML
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasXML(generaEnvioMesXML)"
End Function

Private Function generaAccionesMesXML(txtfile As Object, _
                                      rsReg As ADODB.Recordset, _
                                      rsCol As ADODB.Recordset) As String
On Error GoTo TratarError
    
    '---Bucle de acciones REGISTRO del mes
    If Not (rsReg.EOF) Or (rsReg.RecordCount > 0) Then
        rsReg.MoveFirst
        While Not rsReg.EOF
            createAccionXML txtfile, rsReg!fkPersona
            rsReg.MoveNext
        Wend
    End If
    '---Bucle de acciones COLOCACIÓN del mes
    If Not (rsCol.EOF) Or (rsCol.RecordCount > 0) Then
        rsCol.MoveFirst
        While Not rsCol.EOF
            createAccionXML txtfile, rsCol!fkPersona, rsCol!fkOferta
            rsCol.MoveNext
        Wend
    End If
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasXML(generaAccionesMesXML)"
End Function

Private Function createAccionXML(txtfile As Object, _
                                idPersona As Long, _
                                Optional idOferta As Long = 0) As String
    Dim strXML As String
    
    strXML = "    <ACCION>" & vbNewLine & _
             "      <ID_TRABAJADOR>" & getSNE_IdTrabajador(idPersona) & "</ID_TRABAJADOR>" & vbNewLine & _
             "      <NOMBRE_TRABAJADOR>" & getSNE_NombreTrabajador(idPersona) & "</NOMBRE_TRABAJADOR>" & vbNewLine & _
             "      <APELLIDO1_TRABAJADOR>" & getSNE_Apellido1Trabajador(idPersona) & "</APELLIDO1_TRABAJADOR>" & vbNewLine & _
             "      <APELLIDO2_TRABAJADOR>" & getSNE_Apellido2Trabajador(idPersona) & "</APELLIDO2_TRABAJADOR>" & vbNewLine & _
             "      <FECHA_NACIMIENTO>" & getSNE_FechaNacimiento(idPersona) & "</FECHA_NACIMIENTO>" & vbNewLine & _
             "      <SEXO_TRABAJADOR>" & getSNE_Sexo(idPersona) & "</SEXO_TRABAJADOR>" & vbNewLine & _
             "      <NIVEL_FORMATIVO>" & getSNE_NivelFormativo(idPersona) & "</NIVEL_FORMATIVO>" & vbNewLine & _
             "      <DISCAPACIDAD>" & getSNE_Discapacidad(idPersona) & "</DISCAPACIDAD>" & vbNewLine & _
             "      <INMIGRANTE>" & getSNE_Inmigrante(idPersona) & "</INMIGRANTE>" & vbNewLine
    txtfile.write (strXML)
      
    strXML = IIf(idOferta = 0, _
             "      <COLOCACION>N</COLOCACION>" & vbNewLine, _
             "      <COLOCACION>S</COLOCACION>" & vbNewLine & _
                "      <FECHA_COLOCACION>" & getSNE_COLFechaColocacion(idPersona, idOferta) & "</FECHA_COLOCACION>" & vbNewLine & _
                "      <TIPO_CONTRATO>" & getSNE_COLTipoContrato(idOferta) & "</TIPO_CONTRATO>" & vbNewLine & _
                "      <CIF_NIF_EMPRESA>" & getSNE_COLCIFNIFEmpresa(idOferta) & "</CIF_NIF_EMPRESA>" & vbNewLine & _
                "      <RAZON_SOCIAL_EMPRESA>" & getSNE_COLRazonSocialEmpresa(idOferta) & "</RAZON_SOCIAL_EMPRESA>") & _
            "    </ACCION>" & vbNewLine
    txtfile.write (strXML)
    
    'createAccionXML = strXML
End Function

Private Function generaAgregadoMesXML(txtfile As Object, _
                                     fInicio As Date, _
                                     fFin As Date, _
                                     rsReg As ADODB.Recordset, _
                                     rsCol As ADODB.Recordset) As String
    Dim strXML As String
    
    Dim perTot As Integer
    Dim perNewRegistradas As Integer
    Dim perPerceptoras As Integer       'Perceptoras prestación
    Dim perInsercion As Integer         'Colectivo dificultades insercion
    Dim ofertasTot As Integer
    Dim ofertasEnv As Integer
    Dim ofertasCub As Integer
    Dim puestosTot As Integer
    Dim puestosTotalCub As Integer
    Dim contratosTot As Integer
    Dim contratosTotInd As Integer
    Dim perColocadas As Integer
    
Debug.Print "* INIT generaAgregadoMesXML"
    
    perTot = getSNE_GRPTotalPersonas(rsReg, rsCol)
    perNewRegistradas = getSNE_GRPNuevasRegistradas(fInicio, fFin)
    perPerceptoras = getSNE_GRPPersonasPerceptoras(fInicio, fFin, rsReg, rsCol)
    perInsercion = getSNE_GRPPersonasInsercion(fInicio, fFin, rsReg, rsCol)
    ofertasTot = getSNE_GRPOfertas(fInicio, fFin)
    ofertasEnv = getSNE_GRPOfertasEnviadas(fInicio, fFin)
    ofertasCub = getSNE_GRPOfertasCubiertas(fInicio, fFin)
    puestosTot = getSNE_GRPPuestos(fInicio, fFin)
    puestosTotalCub = getSNE_GRPPuestosCubiertos(fInicio, fFin)
    contratosTot = getSNE_GRPContratos(fInicio, fFin)
    contratosTotInd = getSNE_GRPContratosIndefinidos(fInicio, fFin)
    perColocadas = getSNE_GRPPersonasCol(fInicio, fFin)
    
    
    strXML = "    <DATOS_AGREGADOS>" & vbNewLine & _
             "      <TOTAL_PERSONAS>" & perTot & "</TOTAL_PERSONAS>" & vbNewLine & _
             "      <TOTAL_NUEVAS_REGISTRADAS>" & perNewRegistradas & "</TOTAL_NUEVAS_REGISTRADAS>" & vbNewLine & _
             "      <TOTAL_PERSONAS_PERCEPTORES>" & perPerceptoras & "</TOTAL_PERSONAS_PERCEPTORES>" & vbNewLine & _
             "      <TOTAL_PERSONAS_INSERCION>" & perInsercion & "</TOTAL_PERSONAS_INSERCION>" & vbNewLine & _
             "      <TOTAL_OFERTAS>" & ofertasTot & "</TOTAL_OFERTAS>" & vbNewLine & _
             "      <TOTAL_OFERTAS_ENVIADAS>" & ofertasEnv & "</TOTAL_OFERTAS_ENVIADAS>" & vbNewLine & _
             "      <TOTAL_OFERTAS_CUBIERTAS>" & ofertasCub & "</TOTAL_OFERTAS_CUBIERTAS>" & vbNewLine & _
             "      <TOTAL_PUESTOS>" & puestosTot & "</TOTAL_PUESTOS>" & vbNewLine & _
             "      <TOTAL_PUESTOS_CUBIERTOS>" & puestosTotalCub & "</TOTAL_PUESTOS_CUBIERTOS>" & vbNewLine & _
             "      <TOTAL_CONTRATOS>" & contratosTot & "</TOTAL_CONTRATOS>" & vbNewLine & _
             "      <TOTAL_CONTRATOS_INDEFINIDOS>" & contratosTotInd & "</TOTAL_CONTRATOS_INDEFINIDOS>" & vbNewLine & _
             "      <TOTAL_PERSONAS_COLOCADAS>" & perColocadas & "</TOTAL_PERSONAS_COLOCADAS>" & vbNewLine & _
             "    </DATOS_AGREGADOS>" & vbNewLine
    txtfile.write (strXML)
    
Debug.Print "* END generaAgregadoMesXML"
    
    'generaAgregadoMesXML = strXML
End Function

'*************************************************************************
'   Generación de archivo XML de Agencia de Colocación
'*************************************************************************
Private Function getSNE_IdTrabajador(idPersona As Long) As String
    getSNE_IdTrabajador = Nz(DLookup("dni", "t_persona", "[id]=" & idPersona), "00000000T")
End Function

Private Function getSNE_Apellido1Trabajador(idPersona As Long) As String
    getSNE_Apellido1Trabajador = Left(Nz(DLookup("apellido1", "t_persona", "[id]=" & idPersona), "apellido1"), 20)
End Function

Private Function getSNE_Apellido2Trabajador(idPersona As Long) As String
    getSNE_Apellido2Trabajador = Left(Nz(DLookup("apellido2", "t_persona", "[id]=" & idPersona), "apellido2"), 20)
End Function

Private Function getSNE_NombreTrabajador(idPersona As Long) As String
    getSNE_NombreTrabajador = Left(Nz(DLookup("nombre", "t_persona", "[id]=" & idPersona), "nombre"), 15)
End Function

Private Function getSNE_FechaNacimiento(idPersona As Long) As String
    getSNE_FechaNacimiento = Format(Nz(DLookup("fechaNacimiento", "t_persona", "[id]=" & idPersona), now), "yyyymmdd")
End Function

Private Function getSNE_Sexo(idPersona As Long) As String
    getSNE_Sexo = Nz(DLookup("fkSexo", "t_persona", "[id]=" & idPersona), 0)
End Function

Private Function getSNE_NivelFormativo(idPersona As Long) As String
    '00-Sin estudios, 10-Nivel básico, 20-Formacion profesional, 30-Bachiller, 40-Estudios superiores
    Dim nivel_formativo As String
    Dim idNivelFormacion As Integer
    idNivelFormacion = Nz(DLookup("idNivelFormacionMax", "v_persona_nivelformacionmaximo", "[idPersona]=" & idPersona), 0)
    
    Select Case idNivelFormacion    ' Evalúa Número.
        '1-Sin estudios
        Case 1
            nivel_formativo = "00"
        '2-certificado escolaridad, 3-Aula ocupacional/FP esp, 4-GS/ CAPI/ PQPI o equivalente, 5-Graduado escolar / EGB, 7-ESO
        Case 2, 3, 4, 5, 7
            nivel_formativo = "10"
        '8-FP 1 / FP exp. 2, 9-FP 2 / FP exp. 3, 11-CF grado medio, 10-COU / Bachillerato, 15-BUP
        Case 8, 9, 10, 11, 15
            nivel_formativo = "20"
        '14-CF grado superior, 12-Universitaria grado medio, 13-Universitaria grado superior
        Case 10, 12, 13
            nivel_formativo = "30"
        'Si no encuentra consideramos que no tiene formación
        Case Else    ' Otros valores.
            nivel_formativo = "00"
    End Select
    getSNE_NivelFormativo = nivel_formativo
End Function

Public Function getSNE_Discapacidad(idPersona As Long) As String
    Dim res As String
    'If DCount("fkDiscapacidad", "t_discapacidad", "[fkPersona]=" & idPersona & " AND principal = -1") > 0 Then
    If Nz(DLookup("grado", "t_discapacidadgrado", "[fkPersona]=" & idPersona), 0) >= 33 Then
        res = "S"
    Else
        res = "N"
    End If
    getSNE_Discapacidad = res
End Function

Public Function getSNE_Inmigrante(idPersona As Long) As String
    Dim res As String
    '724 = España
    Dim idPais As Integer
    Dim idAgrupacion As Integer
    idPais = Nz(DLookup("fkPaisNacionalidad", "t_datospersona", "[fkPersona]=" & idPersona), 0)
    idAgrupacion = Nz(DLookup("fkPaisAgrupacion", "a_pais", "[id]=" & idPais), 0)
    If idAgrupacion = 2 Then
        res = "N"
    Else
        res = "S"
    End If
    getSNE_Inmigrante = res
End Function

Private Function getSNE_COLFechaColocacion(idPersona As Long, _
                                           idOferta As Long) As String
    Dim fecha As Date
    fecha = Nz(DLookup("fechaHora", "r_ofertacandidatoshistorico", _
                    "[fkOferta]=" & idOferta & " AND [fkPersona]=" & idPersona), "01/01/1900")
    getSNE_COLFechaColocacion = Format(fecha, "yyyymmdd")
End Function

Private Function getSNE_COLTipoContrato(idOferta As Long) As String
    Dim idTipoContrato As Integer
    Dim jornada As String
    Dim res As String
    'Resultado
    '001-Indefinido tiempo completo
    '003-Indefinido tiempo parcial
    '401-Duración determinada tiempo completo
    '501-Duración determinada tiempo parcial
    
    '1- Indefinido, 2- Temporal, 5- En Formacion, 6- En prácticas
    idTipoContrato = Nz(DLookup("fkTipoContrato1", "t_oferta", "[id]=" & idOferta), 0)
    '
    jornada = Nz(DLookup("jornada", "t_oferta", "[id]=" & idOferta), "")
    
    If (idTipoContrato = 1 And jornada = "Completa") Then
        res = "001"
    ElseIf (idTipoContrato = 1 And jornada = "Parcial") Then
        res = "003"
    ElseIf (idTipoContrato = 2 Or idTipoContrato = 5 Or idTipoContrato = 6) And (jornada = "Completa") Then
        res = "401"
    ElseIf (idTipoContrato = 2 Or idTipoContrato = 5 Or idTipoContrato = 6) And (jornada = "Parcial") Then
        res = "501"
    End If
    
    getSNE_COLTipoContrato = res
End Function

Private Function getSNE_COLCIFNIFEmpresa(idOferta As Long) As String
    Dim idOrganizacion As Long
    idOrganizacion = Nz(DLookup("fkOrganizacion", "t_oferta", "[id]=" & idOferta), 0)
    
    getSNE_COLCIFNIFEmpresa = Left(Nz(DLookup("cif", "t_organizacion", "[id]=" & idOrganizacion), ""), 55)
End Function

Private Function getSNE_COLRazonSocialEmpresa(idOferta As Long) As String
    Dim idOrganizacion As Long
    idOrganizacion = Nz(DLookup("fkOrganizacion", "t_oferta", "[id]=" & idOferta), 0)
    
    getSNE_COLRazonSocialEmpresa = Left(Nz(DLookup("razonsocial", "t_organizacion", "[id]=" & idOrganizacion), ""), 55)
End Function

'<TOTAL_PERSONAS>2</TOTAL_PERSONAS>"
'<TOTAL_NUEVAS_REGISTRADAS>1</TOTAL_NUEVAS_REGISTRADAS>"
'<TOTAL_PERSONAS_PERCEPTORES>1</TOTAL_PERSONAS_PERCEPTORES>"
'<TOTAL_PERSONAS_INSERCION>0</TOTAL_PERSONAS_INSERCION>"
'<TOTAL_OFERTAS>0</TOTAL_OFERTAS>"
'<TOTAL_OFERTAS_ENVIADAS>0</TOTAL_OFERTAS_ENVIADAS>"
'<TOTAL_OFERTAS_CUBIERTAS>0</TOTAL_OFERTAS_CUBIERTAS>"
'<TOTAL_PUESTOS>0</TOTAL_PUESTOS>"
'<TOTAL_PUESTOS_CUBIERTOS>0</TOTAL_PUESTOS_CUBIERTOS>"
'<TOTAL_CONTRATOS>1</TOTAL_CONTRATOS>"
'<TOTAL_CONTRATOS_INDEFINIDOS>0</TOTAL_CONTRATOS_INDEFINIDOS>"
'<TOTAL_PERSONAS_COLOCADAS>1</TOTAL_PERSONAS_COLOCADAS>"

Private Function getSNE_GRPTotalPersonas(rsReg As ADODB.Recordset, _
                                         rsCol As ADODB.Recordset) As Integer
    Dim total As Integer
    total = rsReg.RecordCount + rsCol.RecordCount
    getSNE_GRPTotalPersonas = total
End Function

Private Function getSNE_GRPPersonasPerceptoras(fInicio As Date, _
                                               fFin As Date, _
                                               rsReg As ADODB.Recordset, _
                                               rsCol As ADODB.Recordset) As Integer
    Dim contador As Integer
    Dim idPrestacion As Long
On Error GoTo TratarError

    contador = 0
    
    'Personas registradas
    If Not (rsReg.EOF) Or (rsReg.RecordCount > 0) Then
        rsReg.MoveFirst
        While Not rsReg.EOF
            idPrestacion = Nz(DLookup("id", "t_prestaciones", "fkPersona=" & rsReg!fkPersona & " AND fechaInicio<=#" & fFin & "# AND (fechaFin>=#" & fInicio & "# OR fechaFin is null)"), 0)
            If idPrestacion <> 0 Then
                contador = contador + 1
            End If
            rsReg.MoveNext
        Wend
    End If
    
    'Personas colocadas
    If Not (rsCol.EOF) Or (rsCol.RecordCount > 0) Then
        rsCol.MoveFirst
        While Not rsCol.EOF
            idPrestacion = Nz(DLookup("id", "t_prestaciones", "fkPersona=" & rsCol!fkPersona & " AND fechaInicio<=#" & fFin & "# AND (fechaFin>=#" & fInicio & "# OR fechaFin is null)"), 0)
            If idPrestacion <> 0 Then
                contador = contador + 1
            End If
            rsCol.MoveNext
        Wend
    End If
    
    getSNE_GRPPersonasPerceptoras = contador
    Exit Function
    
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPPersonasPerceptoras )"
    getSNE_GRPPersonasPerceptoras = -1
End Function

'Personas con dificultades de inserción
Public Function getSNE_GRPPersonasInsercion(fInicio As Date, _
                                             fFin As Date, _
                                             rsReg As ADODB.Recordset, _
                                             rsCol As ADODB.Recordset) As Integer
    Dim contador As Integer
    Dim numInsercion As Long
    
    Dim fi, ff As String
    Dim str As String
    Dim rs As ADODB.Recordset
    Dim idPersona As Long
    
On Error GoTo TratarError
    
    fi = Format(fInicio, "mm/dd/yyyy")
    ff = Format(fFin, "mm/dd/yyyy")
    
    contador = 0
    
    str = " SELECT t_colectivo.fkPersona" & _
          " FROM t_colectivo LEFT JOIN a_colectivo ON t_colectivo.fkColectivo = a_colectivo.id" & _
          " WHERE (((t_colectivo.fkPersona)= " & idPersona & ") AND ((a_colectivo.clasificacion) Like '*RDL*'))"
    Set rs = New ADODB.Recordset
    
    'Personas registradas
    If Not (rsReg.EOF) Or (rsReg.RecordCount > 0) Then
        rsReg.MoveFirst
        While Not rsReg.EOF
            idPersona = rsReg!fkPersona
            rs.Open str, CurrentProject.Connection, adOpenStatic, adLockReadOnly
            If Not rs.EOF Then
                contador = contador + 1
            End If
            rs.Close
            
'            numInsercion = DCount("fkPersona", "t_colectivo", "[fkPersona]=" & rsReg!fkPersona & " AND principal = -1")
'            If numInsercion > 0 Then
'                contador = contador + 1
'            End If
            rsReg.MoveNext
        Wend
    End If
    
    'Personas colocadas
    If Not (rsCol.EOF) Or (rsCol.RecordCount > 0) Then
        rsCol.MoveFirst
        While Not rsCol.EOF
            idPersona = rsCol!fkPersona
            rs.Open str, CurrentProject.Connection, adOpenStatic, adLockReadOnly
            If Not rs.EOF Then
                contador = contador + 1
            End If
            rs.Close
            
'            numInsercion = DCount("fkPersona", "t_colectivo", "[fkPersona]=" & rsCol!fkPersona & " AND principal = -1")
'            If numInsercion > 0 Then
'                contador = contador + 1
'            End If
            rsCol.MoveNext
        Wend
    End If
    
    getSNE_GRPPersonasInsercion = contador
    Exit Function
    
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPPersonasInsercion)"
    getSNE_GRPPersonasInsercion = -1
End Function

Private Function getSNE_GRPOfertas(fInicio As Date, _
                                   fFin As Date) As Integer
    Dim SQLOfertas As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    SQLOfertas = " SELECT id" & _
                 " FROM t_oferta" & _
                 " WHERE fechaOferta between #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fFin, "mm/dd/yyyy") & "#"
    
    Set rs = New ADODB.Recordset
    
    rs.Open SQLOfertas, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = rs.RecordCount
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPOfertas = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPOfertas)"
    getSNE_GRPOfertas = -1
End Function

Private Function getSNE_GRPPuestos(fInicio As Date, _
                                   fFin As Date) As Integer
    Dim SQLOfertas As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    result = 0
    SQLOfertas = " SELECT Sum(numeroPuestos) as numPuestos" & _
                 " FROM t_oferta" & _
                 " WHERE fechaOferta between #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fFin, "mm/dd/yyyy") & "#"
                 
    Set rs = New ADODB.Recordset
    rs.Open SQLOfertas, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = Nz(rs!numPuestos, 0)
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPPuestos = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPPuestos)"
    getSNE_GRPPuestos = -1
End Function

'---------------------------------------------------------------------------
'   Autor:  Jose Manuel Sanchez
'   Update: Jose Manuel Sanchez
'   Fecha:  20/01/2012 - Actualización:  20/01/2012
'   Name:   getSNE_GRPOfertasCubiertas
'   Desc:   Ofertas con todos los puestos/vacantes cubiertos. Leemos la fecha de
'           cierre/modificación fechaMes y cubiertos ifoc en vacante/resultado
'   Param:  fInicio, date
'           ffin,    date
'   Retur:  número de ofertas cubiertas
'---------------------------------------------------------------------------
Public Function getSNE_GRPOfertasCubiertas(fInicio As Date, _
                                            fFin As Date) As Integer
    Dim str1, str2, SQLOfertas As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError
    
    'Ofertas cerradas/modificadas durante periodo
    str1 = " SELECT fkOferta" & _
           " FROM t_ofertaestados" & _
           " WHERE ((t_ofertaestados.fkOfertaEstado)=5 Or (t_ofertaestados.fkOfertaEstado)=6)" & _
           " GROUP BY fkOferta" & _
           " HAVING (Max(t_ofertaestados.fecha) Between #" & Format(fInicio, "mm/dd/yyyy") & "# And #" & Format(fFin, "mm/dd/yyyy") & "#)"
    
    'Ofertas, número de puestos cubiertos de la oferta
    str2 = " SELECT fkOferta, Count(id) as numCubiertos" & _
           " FROM t_ofertavacanteresultado" & _
           " WHERE fkOfertaVacanteResultado=1" & _
           " GROUP BY fkOferta"
    
    SQLOfertas = " SELECT t_oferta.id" & _
                 " FROM (t_oferta INNER JOIN (" & str1 & ")  AS ofertaCerradaM ON t_oferta.id = ofertaCerradaM.fkOferta) INNER JOIN (" & str2 & ")  AS OfertaPcubiertos ON t_oferta.id = OfertaPcubiertos.fkOferta" & _
                 " WHERE (((OfertaPcubiertos.numCubiertos)=[numeroPuestos]));"
    '" ((r_ofertacandidatoshistorico.fechaHora) BETWEEN #" & fInicio & "# AND #" & fFin & "#)"
    
    Set rs = New ADODB.Recordset
    rs.Open SQLOfertas, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = rs.RecordCount
    End If
'Debug.Print "*** " & SQLOfertas
    'Cerramos recordset
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPOfertasCubiertas = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPOfertasCubiertas)"
    Debug.Print "ERROR: " & SQLOfertas
    getSNE_GRPOfertasCubiertas = -1
End Function

Private Function getSNE_GRPPuestosCubiertos(fInicio As Date, _
                                            fFin As Date) As Integer
    Dim SQLOfertas As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    SQLOfertas = " SELECT r_ofertacandidatoshistorico.fkPersona" & _
                 " FROM r_ofertacandidatoshistorico" & _
                 " WHERE fkOfertaSegEstado = 11 AND" & _
                         " ((r_ofertacandidatoshistorico.fechaHora) BETWEEN #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fFin, "mm/dd/yyyy") & "#)" & _
                 " GROUP BY fkPersona, fkOferta"

Debug.Print SQLOfertas
    
    result = 0
    
    Set rs = New ADODB.Recordset
    rs.Open SQLOfertas, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = Nz(rs.RecordCount, 0)
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPPuestosCubiertos = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPPuestosCubiertos)"
    Debug.Print "ERROR: " & SQLOfertas
    getSNE_GRPPuestosCubiertos = -1
End Function

Public Function getSNE_GRPContratos(fInicio As Date, _
                                     fFin As Date) As Integer
    Dim SQLContratos As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    updQueryCol Format(fInicio, "mm/dd/yyyy"), Format(fFin, "mm/dd/yyyy")
    SQLContratos = U_SQLCol
                   '" SELECT t_insercion.fkPersona" & _
                   " FROM t_insercion" & _
                   " WHERE t_insercion.fkTipoContrato<>7 AND t_insercion.fkTipoContrato<>8" & _
                     " AND ((t_insercion.fechainicio) BETWEEN #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fFin, "mm/dd/yyyy") & "#)"
    
    result = 0
    
    Set rs = New ADODB.Recordset
    rs.Open SQLContratos, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = Nz(rs.RecordCount, 0)
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPContratos = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPContratos)"
    Debug.Print "ERROR: " & SQLContratos
    getSNE_GRPContratos = -1
End Function

Private Function getSNE_GRPContratosIndefinidos(fInicio As Date, _
                                                fFin As Date) As Integer
    Dim SQLInsercion As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    updQueryCol Format(fInicio, "mm/dd/yyyy"), Format(fFin, "mm/dd/yyyy")
    
    SQLInsercion = " SELECT fkOferta, fkPersona" & _
                   " FROM (" & U_SQLCol & ") as PerCol LEFT JOIN t_oferta ON PerCol.fkOferta = t_oferta.id" & _
                   " WHERE t_oferta.fkTipoContrato1 = 1"
                   '" SELECT t_insercion.id" & _
                   " FROM t_insercion" & _
                   " WHERE t_insercion.fkTipoContrato=1 " & _
                    " AND ((t_insercion.fechainicio) BETWEEN #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fInicio, "mm/dd/yyyy") & "#)"
    
    result = 0
        
    Set rs = New ADODB.Recordset
    rs.Open SQLInsercion, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = Nz(rs.RecordCount, 0)
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPContratosIndefinidos = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPContratosIndefinidos)"
    Debug.Print "ERROR: " & SQLInsercion
    getSNE_GRPContratosIndefinidos = -1
End Function

Private Function getSNE_GRPPersonasCol(fInicio As Date, _
                                       fFin As Date) As Integer
    Dim SQLInsercion As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    updQueryCol Format(fInicio, "mm/dd/yyyy"), Format(fFin, "mm/dd/yyyy")
    
    SQLInsercion = " SELECT fkPersona" & _
                   " FROM (" & U_SQLCol & ")" & _
                   " GROUP BY fkPersona"
                   '" SELECT t_insercion.id" & _
                   " FROM t_insercion" & _
                   " WHERE t_insercion.fkTipoContrato=1 " & _
                    " AND ((t_insercion.fechainicio) BETWEEN #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fInicio, "mm/dd/yyyy") & "#)"
    
    result = 0
    
    Set rs = New ADODB.Recordset
    rs.Open SQLInsercion, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = Nz(rs.RecordCount, 0)
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPPersonasCol = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPContratosIndefinidos)"
    Debug.Print "ERROR: " & SQLInsercion
    getSNE_GRPPersonasCol = -1
End Function

'Personas nuevas registradas en el periodo SQL U_SQLRegNew
Private Function getSNE_GRPNuevasRegistradas(fInicio As Date, _
                                             fFin As Date) As Integer
    Dim SQLNewReg As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    SQLNewReg = " SELECT r_serviciousuario.fkPersona" & _
                " FROM r_serviciousuario" & _
                    " INNER JOIN (" & _
                        " SELECT r_serviciousuario.fkPersona, Count(r_serviciousuario.id) AS CuentaDeid" & _
                        " FROM r_serviciousuario" & _
                        " WHERE ((r_serviciousuario.fkServicio) = 8)" & _
                        " GROUP BY r_serviciousuario.fkPersona" & _
                        " HAVING ((Count(r_serviciousuario.id))=1)) AS NuevosRegAg" & _
                    " ON r_serviciousuario.fkPersona = NuevosRegAg.fkPersona" & _
                " WHERE (r_serviciousuario.fkServicio = 8)" & _
                   " AND (r_serviciousuario.fechaInicio Between #" & Format(fInicio, "mm/dd/yyyy") & "# And #" & Format(fFin, "mm/dd/yyyy") & "#)" & _
                " GROUP BY r_serviciousuario.fkPersona"

    Set rs = New ADODB.Recordset
    rs.Open SQLNewReg, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    result = rs.RecordCount
    
    'Cerramos rs
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPNuevasRegistradas = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPNuevasRegistradas)"
    Debug.Print "ERROR: " & SQLNewReg
    getSNE_GRPNuevasRegistradas = -1
End Function

'Personas Enviadas fechaEnvio del Histórico seguimiento ofertas
Private Function getSNE_GRPOfertasEnviadas(fInicio As Date, _
                                           fFin As Date) As Integer
    Dim SQLOfertas As String
    Dim rs As ADODB.Recordset
    Dim result As Integer
On Error GoTo TratarError

    SQLOfertas = " SELECT r_ofertacandidatoshistorico.fkPersona" & _
                 " FROM r_ofertacandidatoshistorico" & _
                 " WHERE fkOfertaSegEstado = 2 AND" & _
                         " ((r_ofertacandidatoshistorico.fechaHora) BETWEEN #" & Format(fInicio, "mm/dd/yyyy") & "# AND #" & Format(fFin, "mm/dd/yyyy") & "#)" & _
                 " GROUP BY r_ofertacandidatoshistorico.fkPersona"
    
    Set rs = New ADODB.Recordset
    rs.Open SQLOfertas, CurrentProject.Connection, adOpenStatic, adLockReadOnly
    
    If Not (rs.EOF) Then
        rs.MoveFirst
        result = rs.RecordCount
    End If
    
    rs.Close
    Set rs = Nothing
    
    getSNE_GRPOfertasEnviadas = result
    
    Exit Function
TratarError:
    Debug.Print Err.HelpContext & "-" & Err.description, vbOKOnly, "Alert: SIFOC_OfertasConsultasAgencia(getSNE_GRPOfertasEnviadas)"
    Debug.Print "ERROR: " & SQLOfertas
    getSNE_GRPOfertasEnviadas = -1
End Function

'*************************************************************************
'   PRUEBAS
'*************************************************************************
Private Function saveText(txt As String)
    Dim fs As Object
    Dim a As Object
    Dim Ruta As String

    Ruta = CurrentProject.path
    ChDir (Ruta)
    Ruta = Ruta & "\ArchivoEnvioOfertas.xml"
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set a = fs.CreateTextFile(Ruta, True, True)
a.write ("hola")
    a.write (txt)
a.write ("adios")
    a.Close
    Set a = Nothing
End Function



'Public Function testUTF()
'    Dim objStream
'    Set objStream = CreateObject("ADODB.Stream")
'    objStream.Type = adTypeText
'    objStream.mode = adModeReadWrite
'    objStream.Open
'    objStream
'    objStream.Position = 0
'    objStream.Charset = "UTF-8"
'    objStream.WriteText strContent
'    objStream.SaveToFile "c:/hola.xml", adSaveCreateOverWrite
'    objStream.Close
'    Set objStream = Nothing
'End Function
'Private Const strFilePath As String = "C:\TestXML.xml"
 
''  ===  request reference to Microsoft XML, vX.0  ===  ''
 
'Private Sub ExtractToXML()
'    Dim objDoc As MSXML2.DOMDocument
'    Dim objNode As MSXML2.IXMLDOMNode
'    Dim objRoot As MSXML2.IXMLDOMElement
'    Dim objElem As MSXML2.IXMLDOMElement
'    Dim oblkRef As AcadBlockReference
'    Dim ent As AcadEntity
'    Dim ar As Variant
'    Dim i As Integer
'    Set objDoc = New DOMDocument
'    objDoc.resolveExternals = True
'    Set objNode = objDoc.createProcessingInstruction( _
'                  "xml", "version='1.0' encoding='UTF-8'")
'    Set objNode = objDoc.insertBefore(objNode, _
'                                      objDoc.childNodes.Item(0))
'    Set objRoot = objDoc.createElement("blockdata")
'    Set objDoc.documentElement = objRoot
'    objRoot.setAttribute "xmlns:od", _
'                         "urn:schemas-microsoft-com:officedata"
'    For Each ent In ThisDrawing.ModelSpace
'        If TypeOf ent Is AcadBlockReference Then
'            Set oblkRef = ent
'            If oblkRef.HasAttributes Then
'                Set objElem = objDoc.createElement(oblkRef.name)
'                objRoot.appendChild objElem
'                ar = oblkRef.GetAttributes
'                For i = LBound(ar) To UBound(ar)
'                    Set objNode = objDoc.createElement(ar(i).TagString)
'                    objNode.Text = ar(i).TextString
'                    objElem.appendChild objNode
'                Next i
'            End If
'        End If
'    Next ent
'    objDoc.Save strFilePath
'End Sub

'<?xml version="1.0" encoding="UTF-8"?>
'<!--Sample XML file generated by XMLSpy v2008 rel. 2 sp1 (http://www.altova.com)-->
'<ENVIO_ENPI xsi:noNamespaceSchemaLocation="XML_ENPI_v1.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
'    <ENVIO_MENSUAL>
'        <CODIGO_AGENCIA>9900000001</CODIGO_AGENCIA>
'        <AÑO_MES_ENVIO>201101</AÑO_MES_ENVIO>
'        <ACCIONES_REALIZADAS>
'            <ACCION>
'                <ID_TRABAJADOR>00000000A</ID_TRABAJADOR>
'                <NOMBRE_TRABAJADOR>PEPE</NOMBRE_TRABAJADOR>
'                <APELLIDO1_TRABAJADOR>GARCIA</APELLIDO1_TRABAJADOR>
'                <APELLIDO2_TRABAJADOR>GARCIA</APELLIDO2_TRABAJADOR>
'                <FECHA_NACIMIENTO>19911030</FECHA_NACIMIENTO>
'                <SEXO_TRABAJADOR>1</SEXO_TRABAJADOR>
'                <NIVEL_FORMATIVO>00</NIVEL_FORMATIVO>
'                <DISCAPACIDAD>N</DISCAPACIDAD>
'                <INMIGRANTE>N</INMIGRANTE>
'                <COLOCACION>S</COLOCACION>
'                <FECHA_COLOCACION>20110130</FECHA_COLOCACION>
'                <TIPO_CONTRATO>401</TIPO_CONTRATO>
'                <CIF_NIF_EMPRESA>A00000000</CIF_NIF_EMPRESA>
'                <RAZON_SOCIAL_EMPRESA>a</RAZON_SOCIAL_EMPRESA>
'            </ACCION>
'            <ACCION>
'                <ID_TRABAJADOR>00000000A</ID_TRABAJADOR>
'                <NOMBRE_TRABAJADOR>MARIA</NOMBRE_TRABAJADOR>
'                <APELLIDO1_TRABAJADOR>LOPEZ</APELLIDO1_TRABAJADOR>
'                <APELLIDO2_TRABAJADOR>LÃPEZ</APELLIDO2_TRABAJADOR>
'                <FECHA_NACIMIENTO>19911030</FECHA_NACIMIENTO>
'                <SEXO_TRABAJADOR>2</SEXO_TRABAJADOR>
'                <NIVEL_FORMATIVO>20</NIVEL_FORMATIVO>
'                <DISCAPACIDAD>N</DISCAPACIDAD>
'                <INMIGRANTE>N</INMIGRANTE>
'                <COLOCACION>N</COLOCACION>
'            </ACCION>
'        </ACCIONES_REALIZADAS>
'        <DATOS_AGREGADOS>
'            <TOTAL_PERSONAS>2</TOTAL_PERSONAS>
'            <TOTAL_NUEVAS_REGISTRADAS>1</TOTAL_NUEVAS_REGISTRADAS>
'            <TOTAL_PERSONAS_PERCEPTORES>1</TOTAL_PERSONAS_PERCEPTORES>
'            <TOTAL_PERSONAS_INSERCION>0</TOTAL_PERSONAS_INSERCION>
'            <TOTAL_OFERTAS>0</TOTAL_OFERTAS>
'            <TOTAL_OFERTAS_ENVIADAS>0</TOTAL_OFERTAS_ENVIADAS>
'            <TOTAL_OFERTAS_CUBIERTAS>0</TOTAL_OFERTAS_CUBIERTAS>
'            <TOTAL_PUESTOS>0</TOTAL_PUESTOS>
'            <TOTAL_PUESTOS_CUBIERTOS>0</TOTAL_PUESTOS_CUBIERTOS>
'            <TOTAL_CONTRATOS>1</TOTAL_CONTRATOS>
'            <TOTAL_CONTRATOS_INDEFINIDOS>0</TOTAL_CONTRATOS_INDEFINIDOS>
'            <TOTAL_PERSONAS_COLOCADAS>1</TOTAL_PERSONAS_COLOCADAS>
'        </DATOS_AGREGADOS>
'    </ENVIO_MENSUAL>
'    <ENVIO_MENSUAL>
'        <CODIGO_AGENCIA>9900000001</CODIGO_AGENCIA>
'        <AÑO_MES_ENVIO>201102</AÑO_MES_ENVIO>
'        <ACCIONES_REALIZADAS>
'            <ACCION>
'                <ID_TRABAJADOR>00000000A</ID_TRABAJADOR>
'                <NOMBRE_TRABAJADOR>MANOLO</NOMBRE_TRABAJADOR>
'                <APELLIDO1_TRABAJADOR>ESPAÃOL</APELLIDO1_TRABAJADOR>
'                <APELLIDO2_TRABAJADOR>ESPAÃOL</APELLIDO2_TRABAJADOR>
'                <FECHA_NACIMIENTO>19651030</FECHA_NACIMIENTO>
'                <SEXO_TRABAJADOR>1</SEXO_TRABAJADOR>
'                <NIVEL_FORMATIVO>00</NIVEL_FORMATIVO>
'                <DISCAPACIDAD>N</DISCAPACIDAD>
'                <INMIGRANTE>N</INMIGRANTE>
'                <COLOCACION>S</COLOCACION>
'                <FECHA_COLOCACION>20110228</FECHA_COLOCACION>
'                <TIPO_CONTRATO>001</TIPO_CONTRATO>
'                <CIF_NIF_EMPRESA>A00000000</CIF_NIF_EMPRESA>
'                <RAZON_SOCIAL_EMPRESA>a</RAZON_SOCIAL_EMPRESA>
'            </ACCION>
'            <ACCION>
'                <ID_TRABAJADOR>00000000A</ID_TRABAJADOR>
'                <NOMBRE_TRABAJADOR>ANA</NOMBRE_TRABAJADOR>
'                <APELLIDO1_TRABAJADOR>RODRIGUEZ</APELLIDO1_TRABAJADOR>
'                <APELLIDO2_TRABAJADOR>SAEZ DE ARETXABALETA</APELLIDO2_TRABAJADOR>
'                <FECHA_NACIMIENTO>19911030</FECHA_NACIMIENTO>
'                <SEXO_TRABAJADOR>1</SEXO_TRABAJADOR>
'                <NIVEL_FORMATIVO>00</NIVEL_FORMATIVO>
'                <DISCAPACIDAD>N</DISCAPACIDAD>
'                <INMIGRANTE>N</INMIGRANTE>
'                <COLOCACION>N</COLOCACION>
'            </ACCION>
'        </ACCIONES_REALIZADAS>
'        <DATOS_AGREGADOS>
'            <TOTAL_PERSONAS>2</TOTAL_PERSONAS>
'            <TOTAL_NUEVAS_REGISTRADAS>0</TOTAL_NUEVAS_REGISTRADAS>
'            <TOTAL_PERSONAS_PERCEPTORES>0</TOTAL_PERSONAS_PERCEPTORES>
'            <TOTAL_PERSONAS_INSERCION>0</TOTAL_PERSONAS_INSERCION>
'            <TOTAL_OFERTAS>0</TOTAL_OFERTAS>
'            <TOTAL_OFERTAS_ENVIADAS>0</TOTAL_OFERTAS_ENVIADAS>
'            <TOTAL_OFERTAS_CUBIERTAS>0</TOTAL_OFERTAS_CUBIERTAS>
'            <TOTAL_PUESTOS>0</TOTAL_PUESTOS>
'            <TOTAL_PUESTOS_CUBIERTOS>0</TOTAL_PUESTOS_CUBIERTOS>
'            <TOTAL_CONTRATOS>0</TOTAL_CONTRATOS>
'            <TOTAL_CONTRATOS_INDEFINIDOS>0</TOTAL_CONTRATOS_INDEFINIDOS>
'            <TOTAL_PERSONAS_COLOCADAS>0</TOTAL_PERSONAS_COLOCADAS>
'        </DATOS_AGREGADOS>
'    </ENVIO_MENSUAL>
'</ENVIO_ENPI>

